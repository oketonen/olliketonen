{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Main","class","href","Bio","Contact","Work","useRouteMatch","path","url","width","height","scrolling","frameborder","allow","src","allowfullscreen","Boolean","window","location","hostname","match","ReactDOM","render","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQAoCA,SAASA,IACP,OACE,yBAAKC,MAAM,WAEP,yDACA,yBAAKA,MAAM,aACT,uBAAGA,MAAM,UAAUC,KAAK,SAAxB,QACA,uBAAGD,MAAM,UAAUC,KAAK,QAAxB,OACA,uBAAGD,MAAM,UAAUC,KAAK,YAAxB,aAOV,SAASC,IACP,OACE,6BAEI,uBAAGF,MAAM,OAAOC,KAAK,KAArB,QAEA,uBAAGD,MAAM,OAAT,wNAIA,6BACA,uBAAGA,MAAM,OAAT,kTASR,SAASG,IACP,OACE,6BAEI,uBAAGH,MAAM,OAAOC,KAAK,KAArB,QACA,4DACA,uDAQR,SAASG,IAAQ,IAAD,EACMC,cADN,EACRC,KADQ,EACFC,IACZ,OACI,6BACE,uBAAGP,MAAM,OAAOC,KAAK,KAArB,QAEA,6BAIE,6BACE,2CACA,yBAAKD,MAAM,mBACT,4BACEQ,MAAM,OAAOC,OAAO,MAAMC,UAAU,KAAKC,YAAY,KAAKC,MAAM,WAChEC,IAAI,8OAKV,kDACA,yBAAKb,MAAM,mBACT,4BACEQ,MAAM,OAAOC,OAAO,MAAMC,UAAU,KAAKC,YAAY,KAAKC,MAAM,WAChEC,IAAI,6OAIR,6BACE,qDACA,yBAAKb,MAAM,mBACT,4BAAQQ,MAAM,MAAMC,OAAO,MAAMI,IAAI,4CAA4CF,YAAY,IAAIC,MAAM,0EAA0EE,iBAAe,IAChM,4BAAQN,MAAM,MAAMC,OAAO,MAAMI,IAAI,4CAA4CF,YAAY,IAAIC,MAAM,0EAA0EE,iBAAe,IAGhM,4BAAQN,MAAM,MAAMC,OAAO,MAAMI,IAAI,4CAA4CF,YAAY,IAAIC,MAAM,0EAA0EE,iBAAe,IAChM,4BAAQN,MAAM,MAAMC,OAAO,MAAMI,IAAI,4CAA4CF,YAAY,IAAIC,MAAM,0EAA0EE,iBAAe,MAQpM,uBAAGd,MAAM,OAAOC,KAAK,KAArB,UCrHUc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBFQD,WACb,OAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAChB,KAAK,KAChB,kBAACP,EAAD,OAEF,kBAAC,IAAD,CAAOuB,OAAK,EAAChB,KAAK,SAChB,kBAACF,EAAD,OAEF,kBAAC,IAAD,CAAOkB,OAAK,EAAChB,KAAK,QAChB,kBAACJ,EAAD,OAEF,kBAAC,IAAD,CAAOoB,OAAK,EAAChB,KAAK,YAChB,kBAACH,EAAD,WEvBM,MAASoB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.54e2b217.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useRouteMatch\n} from \"react-router-dom\";\n\n// import FadeIn from 'react-fade-in';\n\n\nexport default function BasicExample() {\n  return (\n\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Main />\n        </Route>\n        <Route exact path=\"/work\">\n          <Work />\n        </Route>\n        <Route exact path=\"/bio\">\n          <Bio />\n        </Route>\n        <Route exact path=\"/contact\">\n          <Contact />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Main() {\n  return (\n    <div class=\"maindiv\">\n      {/* <FadeIn> */}\n        <h1>OLLI KETONEN AUDIO DESIGN</h1>\n        <div class=\"buttonbox\">\n          <a class=\"buttonw\" href=\"/work\">WORK</a>\n          <a class=\"buttonb\" href=\"/bio\">BIO</a>\n          <a class=\"buttonc\" href=\"/contact\">CONTACT</a>\n        </div>\n      {/* </FadeIn> */}\n    </div>\n  );\n}\n\nfunction Bio() {\n  return (\n    <div>\n      {/* <FadeIn> */}\n        <a class=\"link\" href=\"/\">BACK</a>\n\n        <p class=\"bio\">\n          I am a sound designer and a musician for traditional and new media.\n          I have worked with various clients and companies, creating music and audio content\n          for multiple video games, commercials and art installations. </p>\n        <br></br>\n        <p class=\"bio\">My professional skills range from music production to programming and game audio.\n          I have a degree in Music Technology from Tampere Music Academy and I currently\n          study Sound in New Media in Aalto University as a Master's Student. Occasionally\n          I can be seen on stage and in studio as a cellist and a DJ.</p>\n      {/* </FadeIn> */}\n    </div>\n  );\n}\n\nfunction Contact() {\n  return (\n    <div>\n      {/* <FadeIn> */}\n        <a class=\"link\" href=\"/\">BACK</a>\n        <h2>mail: ketonenmusic@gmail.com</h2>\n        <h2>call: +358 50 304 6821</h2>\n      {/* </FadeIn> */}\n    </div>\n  );\n}\n\n\n\nfunction Work() {\n  let { path, url } = useRouteMatch();\n  return (\n      <div>\n        <a class=\"link\" href=\"/\">BACK</a>\n\n        <div>\n\n        {/* <FadeIn> */}\n\n          <div>\n            <h2>// MUSIC //</h2>\n            <div class=\"sound-container\">\n              <iframe\n                width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n                src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/323477977%3Fsecret_token%3Ds-9iKDk&color=%23848496&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\">\n              </iframe>\n            </div>\n          </div>\n\n          <h2>// SOUND DESIGN //</h2>\n          <div class=\"sound-container\">\n            <iframe\n              width=\"100%\" height=\"450\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\"\n              src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/323480289%3Fsecret_token%3Ds-ix2Ev&color=%23848496&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\">\n            </iframe>\n          </div>\n\n          <div>\n            <h2>// INTERACTIVE ART //</h2>\n            <div class=\"video-container\">\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oTt51tDzfd0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/2JGsYHQvrQs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              {/* <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FU88mejvyBY\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/3mwUV4mp5JU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> */}\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/t8P1MvJmGuU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9sd46uqEZZQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          </div>\n\n\n\n          {/* </FadeIn> */}\n\n          <a class=\"link\" href=\"/\">BACK</a>\n\n        </div>\n      </div>\n    );\n  }\n\n  // export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}